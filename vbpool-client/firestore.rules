rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function currUser() {
      return request.auth.uid;
    }

    function isAdmin() {
       return request.auth.token.role == 'admin';
    }

    function signedIn() {
      return currUser() != null;
    }

    match /pools/{pool} {
      function rsrcData() {
        return resource.data;
      }

      function reqRsrcData() {
        return request.resource.data;
      }

      function readGuard() {
        return signedIn() &&
               rsrcData().userId == currUser();
      }

      function writeGuard() {
        return signedIn() &&
               reqRsrcData().userId == currUser() &&
               reqRsrcData().flags.isPaid == false;
      }

      function parentDoc() {
        return get(/databases/$(database)/documents/pools/$(pool)).data
      }

      match /forms/{form} {
        function isOwn() {
          return parentDoc().userId == currUser() || isAdmin();
        }

        allow get:    if isOwn() || isAdmin();
        allow create: if isOwn() || isAdmin();
        allow update: if (
                           isOwn() &&
                           rsrcData().page1.meta.poolName == reqRsrcData().page1.meta.poolName && // Not allowed to change value
                           parentDoc().flags.isPaid == false
                         ) ||
                         isAdmin();
        allow delete: if (
                           isOwn() &&
                           parentDoc().flags.isPaid == false
                         ) ||
                         isAdmin();

      }

      allow create: if writeGuard() || isAdmin();
      allow read:   if readGuard() || isAdmin();
      allow update: if (readGuard() && writeGuard()) || isAdmin();
      allow delete: if (readGuard() || isAdmin()) && rsrcData().flags.isPaid == false;
    }
  }
}
